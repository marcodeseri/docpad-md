{
  "name": "docpad-plugin-tagging",
  "version": "2.0.1",
  "description": "DocPad plugin providing tag cloud generation and tag index pages",
  "homepage": "https://github.com/rantecki/docpad-plugin-tagging",
  "keywords": [
    "docpad",
    "docpad-plugin",
    "tagging"
  ],
  "author": {
    "name": "Richard Antecki",
    "email": "richard@antecki.id.au",
    "url": "richard.antecki.id.au"
  },
  "bugs": {
    "url": "https://github.com/rantecki/docpad-plugin-tagging/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/rantecki/docpad-plugin-tagging.git"
  },
  "engines": {
    "node": ">=0.4",
    "docpad": ">=6.1 <7"
  },
  "dependencies": {
    "lodash": "~1.0.1",
    "bal-util": "~1.16.10"
  },
  "devDependencies": {
    "coffee-script": "~1.4.0"
  },
  "main": "./out/tagging.plugin.js",
  "scripts": {
    "test": "node ./test/tagging.test.js",
    "prepublish": "cake compile"
  },
  "readme": "# Tagging Plugin for DocPad\nExtends [DocPad's](https://docpad.org) tagging features by adding tag cloud generation and automatic tag index pages.\n\n## Install\n\n```\nnpm install --save docpad-plugin-tagging\n```\n\n## Usage\n\n### Tag Cloud\n\nAdd tag metadata to your documents as described in the [Related Plugin](https://github.com/docpad/docpad-plugin-related/).\n\nThe plugin adds the `@getTagCloud()` template helper, which returns an object containing the tag cloud data of the form:\n\n```\nyellow:\n\ttag: \"yellow\"\t\t\t// the tag name\n\turl: \"/tags/yellow\"\t\t// URL of the tag index page\n\tcount: 5\t\t\t\t\t// number of documents containing the tag\n\tweight: 0.25\t\t\t\t// weight of the tag\nblue:\n\ttag: \"blue\"\n\turl: \"/tags/blue\"\n\tcount: 3\n\tweight: 0.12\n...\n```\n\nThe following example iterates through `tagCloud` and generates links to the tag index pages (in *eco*):\n\n```\n<% for tag, data of @getTagCloud(): %>\n    <a href=\"<%= data.url %>\" data-tag-count=\"<%= data.count %>\" data-tag-weight=\"<%= data.weight %>\">\n        <%= tag %>\n    </a>\n<% end %>\n```\n\nNote that in this example we've added the count and weight here as HTML5 data fields so that a client-side script can apply the desired styling.  You can of course do whatever you wish with the count or weight values, such as adding inline CSS for setting the font-size (but of course we don't do that kind of thing anymore right?)\n\n### Index Pages\n\nThe plugin will also dynamically generate a document for each tag found with the url `tags/[tagname].html`.  The index document is created with the following metadata (by default):\n\n```\n---\nlayout: tags\ntag: [tagname]\n---\n```\n\nThe plugin does not generate any content for the index pages.  You are in complete control of what is displayed on the index pages via the layout file.\n\nFor example, let's create the following file at `layouts/tags.html.eco` to display a list of all documents that have the tag in question:\n\n```\n---\nlayout: default\n---\n<h1>Pages tagged with '<%= @document.tag %>'</h1>\n\n<ul>\n<% for doc in @getCollection('documents').findAll({tags: '$in': @document.tag}).toJSON(): %>\n    <li><a href=\"<%= doc.url %>\"><%= doc.title %></a></li>\n<% end %>function to the template-data\n</ul>\n```\n\nThe plugin also adds a `@getTagUrl(tagname)` template helper so you can easily get the URL of the index page for a particular tag.  For example, in your templates you could display a list of the document's tags as links to their index page (this time in *coffeekup* just to keep life interesting):\n\n```\n---\ntitle: \"Random document\"\nlayout: default\ntags:\n - blarky\n - snargle\n - floopyfunction to the template-data\n---\nh2 -> \"My Tags\"\nul ->\n    for tag in @document.tags\n        li -> a href: @getTagUrl(tag), -> tag\n```\n\n## Options\n\n- *collectionName* : Can be used to narrow the scope of the plugin to a specific collection and therefore improve performance (defaults to 'documents').\n- *indexPageLayout* : Override the name of the layout file used for the tag index pages (defaults to 'tags').\n- *indexPagePath* : Override the relative output path of the tag index pages (defaults to 'tags').\n- *getTagWeight* : Override the function used to generate the tag weights (see below).\n\n### Customising the weight function\n\nBy default, the tag weights are calculated using a simple logarithmic algorithm.  If that isn't floating your proverbial boat you are free to override this function with the weight function of your choosing.  For example in your docpad config you could add:\n\n```\nplugins:\n    tagging:\n        getTagWeight: (count, maxCount) ->\n            return count/maxCount\n```\n\nHere `count` is the number of occurences of the tag, and `maxCount` is the count of the tag with the highest number of occurrences.\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2013 [Richard Antecki](http://richard.antecki.id.au)\n",
  "_id": "docpad-plugin-tagging@2.0.1",
  "_from": "docpad-plugin-tagging@2"
}
