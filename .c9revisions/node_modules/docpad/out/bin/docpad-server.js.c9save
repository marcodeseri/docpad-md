{"ts":1376596978242,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated by CoffeeScript 1.6.3\nvar DocPad, action, docpadConfig, getArgument;\n\nDocPad = require('../lib/docpad');\n\ngetArgument = function(name, value, defaultValue) {\n  var argumentIndex, result;\n  if (value == null) {\n    value = null;\n  }\n  if (defaultValue == null) {\n    defaultValue = null;\n  }\n  result = defaultValue;\n  argumentIndex = process.argv.indexOf(\"--\" + name);\n  if (argumentIndex !== -1) {\n    result = value != null ? value : process.argv[argumentIndex + 1];\n  }\n  return result;\n};\n\naction = getArgument('action', null, 'server generate');\n\ndocpadConfig = {};\n\ndocpadConfig.port = (function() {\n  var port;\n  port = getArgument('port');\n  if (port && isNaN(port) === false) {\n    port = parseInt(port, 10);\n  }\n  return port;\n})();\n\nDocPad.createInstance(docpadConfig, function(err, docpad) {\n  if (err) {\n    return console.log(err.stack);\n  }\n  return docpad.action(action, function(err) {\n    if (err) {\n      return console.log(err.stack);\n    }\n    return console.log('OK');\n  });\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1014}]],"length":1014}
{"contributors":[],"silentsave":false,"ts":1376597011986,"patch":[[{"diffs":[[0,"port');\n"],[1,"  console.log(\"port \" + port)\n"],[0,"  if (po"]],"start1":653,"start2":653,"length1":16,"length2":46}]],"length":1044,"saved":false}
{"ts":1376597120145,"patch":[[{"diffs":[[0,"rt');\n  "],[1,"return "],[0,"console."]],"start1":655,"start2":655,"length1":16,"length2":23}]],"length":1051,"saved":false}
{"ts":1376597155500,"patch":[[{"diffs":[[0,"');\n"],[-1,"  return console.log(\"port \" + port)\n"],[0,"  if"]],"start1":657,"start2":657,"length1":45,"length2":8}]],"length":1014,"saved":false}
{"ts":1376597205444,"patch":[[{"diffs":[[0," return "],[-1,"port"],[1,"console.log('port '+ port)"],[0,";\n})();\n"]],"start1":736,"start2":736,"length1":20,"length2":42}]],"length":1036,"saved":false}
{"ts":1376597237810,"patch":[[{"diffs":[[0,"t = "],[-1,"getArgument('port');\n  if (port && isNaN(port) === false) {\n    port = parseInt(port, 10);\n  }"],[1,"process.env.PORT"],[0,"\n  r"]],"start1":636,"start2":636,"length1":102,"length2":24}]],"length":958,"saved":false}
{"ts":1376597273388,"patch":[[{"diffs":[[0,"urn "],[-1,"console.log('port '+"],[0," port"],[-1,")"],[0,";\n})"]],"start1":662,"start2":662,"length1":34,"length2":13}]],"length":937,"saved":false}
{"ts":1376597275330,"patch":[[{"diffs":[[0," return "],[-1," "],[0,"port;\n})"]],"start1":658,"start2":658,"length1":17,"length2":16}]],"length":936,"saved":false}
{"ts":1376597294993,"patch":[[{"diffs":[[0,"t = "],[-1,"process.env.PORT"],[1,"getArgument('port');\n  if (port && isNaN(port) === false) {\n    port = parseInt(port, 10);\n  }"],[0,"\n  r"]],"start1":636,"start2":636,"length1":24,"length2":102}]],"length":1014,"saved":false}
